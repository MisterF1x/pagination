{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-8681af5c411a3cf0.js","node_modules/@parcel/runtime-js/lib/runtime-3b0955e2d6996043.js","src/js/state.js","src/js/refs.js","src/js/createPagination.js","src/js/renderFn.js","src/js/services.js","src/index.js","src/js/handlers.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"BDmrC\\\":\\\"index.0c75c941.js\\\",\\\"hmfaf\\\":\\\"sprite.34e24702.svg\\\",\\\"5NJCH\\\":\\\"index.f53300ee.css\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hmfaf\")).toString();","export const state = {\n  currentPage: 1,\n  totalPages: 1000,\n  sprite: new URL('../img/sprite.svg', import.meta.url),\n};\n","export const refs = {\n  pagination: document.querySelector('.pagination'),\n};\n","export const paginate = (totalPages, currentPage) => {\n  const groupSize = 5;\n  const numGroups = Math.ceil(totalPages / groupSize);\n  const currentGroup = Math.ceil(currentPage / groupSize);\n  const startPage = (currentGroup - 1) * groupSize + 1;\n  const endPage = Math.min(startPage + groupSize - 1, totalPages);\n\n  const pages = Array.from(\n    { length: endPage - startPage + 1 },\n    (_, i) => startPage + i\n  );\n\n  const hasPrevGroup = currentGroup > 1;\n  const hasNextGroup = currentGroup < numGroups;\n  return {\n    pages,\n    hasPrevGroup,\n    hasNextGroup,\n  };\n};\n","import { state } from './state';\nimport { paginate } from './createPagination';\nimport { refs } from './refs';\nconst { pagination } = refs;\n\nexport const paginationMarkup = () => {\n  const { pages, hasPrevGroup, hasNextGroup } = paginate(\n    state.totalPages,\n    state.currentPage\n  );\n  const firstPage = `<button type=\"button\" class=\"start-btn page-btn\">1</button>`;\n  const lastPage = `<button type=\"button\" class=\"end-btn page-btn\">${state.totalPages}</button>`;\n  const prev = `<button type=\"button\" class=\"prev-btn page-btn\"><svg class=\"icon icon-arrow-left\">\n    <use xlink:href=\"${state.sprite}#icon-arrow-left\"></use>\n  </svg></button>`;\n  const next = `<button type=\"button\" class=\"next-btn page-btn\"><svg class=\"icon icon-arrow-right\">\n    <use xlink:href=\"${state.sprite}#icon-arrow-right\"></use>\n  </svg></button>`;\n  const dotsBtnPrev = `<button class=\"page-btn prev-dots\">...</button>`;\n  const dotsBtnNext = `<button class=\"page-btn next-dots\">...</button>`;\n  const btnPages = pages\n    .map(num => {\n      const isActive = num === state.currentPage ? 'active-page' : '';\n      return `<button type=\"button\" class=\"page-btn ${isActive}\n        \">${num}</button>`;\n    })\n    .join('');\n\n  const leftGroup = hasPrevGroup ? prev + firstPage + dotsBtnPrev : '';\n  const rightGroup = hasNextGroup ? dotsBtnNext + lastPage + next : '';\n  return leftGroup + btnPages + rightGroup;\n};\n\nexport const renderMarkup = markup => {\n  pagination.insertAdjacentHTML('beforeend', markup);\n};\n","import { state } from './state';\nimport { refs } from './refs';\nimport { paginate } from './createPagination';\nimport { renderMarkup, paginationMarkup } from './renderFn';\nconst { pagination } = refs;\n// let { currentPage, totalPages } = state;\n\nexport const clearHTML = () => {\n  pagination.innerHTML = '';\n};\nexport const updateCurrentPage = newPage => {\n  state.currentPage = newPage;\n  clearHTML();\n  renderMarkup(paginationMarkup());\n};\nexport const goToNextPage = () => {\n  updateCurrentPage(state.currentPage + 1);\n};\nexport const goToPrevPage = () => {\n  updateCurrentPage(state.currentPage - 1);\n};\nexport const goToNextGroupBtn = () => {\n  const { pages } = paginate(state.totalPages, state.currentPage);\n  const lastPageOfCurrentGroup = pages[pages.length - 1];\n  const newPage = Math.min(lastPageOfCurrentGroup + 1, state.totalPages);\n  currentPage = pages[pages.length - 1] + 1;\n  updateCurrentPage(newPage);\n};\nexport const goToPrevGroupBtn = () => {\n  const { pages } = paginate(state.totalPages, state.currentPage);\n  const firstPageOfCurrentGroup = pages[0];\n  const newPage = Math.max(firstPageOfCurrentGroup - 1, 1);\n  updateCurrentPage(newPage);\n};\nexport const changePageByClick = evt => {\n  const activeBtn = document.querySelector('.active-page');\n  const selectedPage = Number(evt.target.textContent) || state.currentPage;\n  if (selectedPage === state.currentPage) return;\n\n  updateCurrentPage(selectedPage);\n  activeBtn.classList.remove('active-page');\n  evt.target.classList.add('active-page');\n};\n","import 'modern-normalize';\nimport './index.css';\nimport { onBtnPageClick } from './js/handlers';\nimport { refs } from './js/refs';\nimport { paginationMarkup, renderMarkup } from './js/renderFn';\nimport { state } from './js/state';\nconst { pagination } = refs;\n\npagination.addEventListener('click', onBtnPageClick);\nrenderMarkup(paginationMarkup(state.currentPage));\nconsole.log(state.currentPage);\n","import {\n  goToNextGroupBtn,\n  goToNextPage,\n  goToPrevPage,\n  goToPrevGroupBtn,\n  changePageByClick,\n} from './services';\nimport { state } from './state';\n\nexport const onBtnPageClick = evt => {\n  if (evt.target.nodeName !== 'BUTTON') return;\n  if (Number(evt.target.textContent) === state.currentPage) return;\n  if (evt.target.classList.contains('next-btn')) goToNextPage();\n  if (evt.target.classList.contains('prev-btn')) goToPrevPage();\n  if (evt.target.classList.contains('next-dots')) goToNextGroupBtn();\n  if (evt.target.classList.contains('prev-dots')) goToPrevGroupBtn();\n  changePageByClick(evt);\n  console.log(`current-page: ${state.currentPage}`);\n};\n"],"names":["$b49ba41aa6ff6887$export$6503ec6e8aabbaf","$b49ba41aa6ff6887$export$f7ad0328861e2f03","$b49ba41aa6ff6887$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$aeb29ab3c509f6d7$exports","URL","resolve","import","meta","url","toString","$104e8f472d3bb214$export$ca000e230c0caa3e","currentPage","totalPages","sprite","$e01e3a68a312c322$export$21666b427502ea6d","pagination","document","querySelector","$9a6348b9ffd5b575$export$6f8f11629dd8afb7","numGroups","Math","ceil","currentGroup","startPage","endPage","min","Array","from","_","$ba30dbecdffd22c0$var$pagination","$ba30dbecdffd22c0$export$a88ca8237831132f","pages","hasPrevGroup","hasNextGroup","lastPage","next","prev","map","num","join","$ba30dbecdffd22c0$export$add40575555c273c","markup","insertAdjacentHTML","$0f882b7162203ddc$var$pagination","$0f882b7162203ddc$export$f93edae441a67c30","newPage","innerHTML","$0f882b7162203ddc$export$fc8d824d864fa336","lastPageOfCurrentGroup","$0f882b7162203ddc$export$4c12d0dc4440296","firstPageOfCurrentGroup","max","$0f882b7162203ddc$export$581a0594e878264f","evt","activeBtn","selectedPage","Number","target","textContent","classList","remove","add","$68896c2b141be762$var$pagination","addEventListener","nodeName","contains","console","log"],"version":3,"file":"index.0c75c941.js.map"}